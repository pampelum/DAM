package application;
	
import java.util.function.UnaryOperator;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.TextFormatter;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;


public class Main extends Application {
	Label lblTitle = new Label("Titol");
	Label lblIsbn = new Label("ISBN");
	Label lblAuthor = new Label("Autor");
	Label lblYear = new Label("Any");
	Label lblGenere = new Label("Genere");
	Label lblLanguage = new Label("Idioma");
	Label lblPublisher = new Label("Editorial");
	
	static TextField txtTitle = new TextField();
	static TextField txtIsbn = new TextField();
	static TextField txtAuthor = new TextField();
	static TextField txtYear = new TextField();
	static TextField txtGenere = new TextField();
	static TextField txtLanguage = new TextField();
	static TextField txtPublisher = new TextField();
	
	Button btnBack = new Button();
	Button btnAccept = new Button();
	
	@Override
	public void start(Stage primaryStage) {
		try {
			GridPane root = new GridPane();
			Scene scene = new Scene(root,400,400);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			
			root.setHgap(30);
			root.setVgap(5);
			//Columna 1
			root.add(lblTitle, 0, 0);
			root.add(txtTitle, 0, 1);
			root.add(lblAuthor, 0, 4);
			root.add(txtAuthor, 0, 5);
			root.add(lblIsbn, 0, 8);
			root.add(txtIsbn, 0, 9);
			root.add(lblGenere, 0, 12);
			root.add(txtGenere, 0, 13);
			
			//Columna 2
			root.add(lblLanguage, 1, 0);
			root.add(txtLanguage, 1, 1);
			root.add(lblPublisher, 1, 4);
			root.add(txtPublisher, 1, 5);
			root.add(lblYear, 1, 8);
			root.add(txtYear, 1, 9);
			root.add(btnAccept, 1, 18);
			
			txtIsbn.addEventFilter(KeyEvent.KEY_TYPED, e -> {
				UnaryOperator<TextFormatter.Change> filter = change -> {
					if(change.getControlNewText().matches("[0-9]{0,10}"))
					{
						return change;
					} 
					else 
					{
						return null;
					}
				};
				
				TextFormatter<String> formater = new TextFormatter<>(filter);
				txtIsbn.setTextFormatter(formater);

			});

			txtYear.addEventFilter(KeyEvent.KEY_TYPED, e -> {
				UnaryOperator<TextFormatter.Change> filter = change -> {
					if(change.getControlNewText().matches("[0-9]{0,4}"))
					{
						return change;
					} 
					else 
					{
						return null;
					}
				};
				
				TextFormatter<String> formater = new TextFormatter<>(filter);
				txtYear.setTextFormatter(formater);

			});
			
			txtGenere.addEventFilter(KeyEvent.KEY_TYPED, e-> {
				if(!e.getCharacter().matches("[A-Z]*[a-z]*[ ]"))
				{
					e.consume();
				}
			});
			
			txtAuthor.addEventFilter(KeyEvent.KEY_TYPED, e-> {
				if(!e.getCharacter().matches("[A-Z]*[a-z]*[ ]*"))
				{
					e.consume();
				}
			});
			
			txtLanguage.addEventFilter(KeyEvent.KEY_TYPED, e-> {
				if(!e.getCharacter().matches("[A-Z]*[a-z]*"))
				{
					e.consume();
				}
			});
			
			btnAccept.setOnAction((event) -> {
				instanciarLlibre();
			});
			
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		launch(args);
	}
	
	public static void instanciarLlibre() {
		String title, author, isbn, genere, language, publisher, year;
		
		title = txtTitle.getText();
		author = txtAuthor.getText();
		isbn = txtIsbn.getText();
		genere = txtGenere.getText();
		language = txtLanguage.getText();
		publisher = txtPublisher.getText();
		year = txtYear.getText();
		
		Book book = new Book(isbn, title, author, year, genere, language, publisher);
		System.out.println(book.toString());
	}
}
