package suma_vector_threads;

public class Main extends Thread{

	int arrayCompartit[] = {1,1,1,1,1,1,1,1,1};
	static int nombreThreads = 3;	
	int iteracionsThread = arrayCompartit.length/nombreThreads;
	static int sumaTotal = 0;
	
	public void run() {
		int nombreThread = Integer.parseInt(Thread.currentThread().getName());
		int sumaPart = 0;
		int posInici = nombreThread * iteracionsThread;
		int posFinal = posInici + iteracionsThread;
		
		for(int i = posInici; i < posFinal; i++) {
			sumaPart += arrayCompartit[i];
		}
		
		sumaTotal += sumaPart;
	}
	
	public static void main(String[] args) throws InterruptedException {
		Main obj = new Main();
		
		Thread t0 = new Thread(obj);
   		Thread t1 = new Thread(obj);
   		Thread t2 = new Thread(obj);
	
   		t0.setName("0");
   		t1.setName("1");
   		t2.setName("2");

   		t0.start();
   		t1.start();
   		t2.start();

   		t0.join();
   		t1.join();
   		t2.join();
   		
   		System.out.println(sumaTotal);
	}

}
